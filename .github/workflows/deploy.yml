name: Deployment (Container)
on:
  push:
    branches:
      - master
      - dev
env:
  CACHE_KEY: node-deps
  MONGODB_DB_NAME: ga-demos-7
jobs:
  test:
    environment: testing
    runs-on: ubuntu-latest
    container: #use this key to run the job inside a container which runs inside the runner.
      image: node:16
      # env: you can define the env variables used by container image by using this feild
    env:
      MONGODB_CONNECTION_PROTOCOL: mongodb
      MONGODB_CLUSTER_ADDRESS: mongodb #after defining the service container, we can use service container's label which runs a mongodb server.
      MONGODB_USERNAME: root #after defining the service containers, and their login credetials, we are using same credentials on job level
      MONGODB_PASSWORD: example
      PORT: 8080
    services: #defining a service container, which will create a database for testing that we were earlier using spearately.
      mongodb: #label defined for the service 
        image: mongo #image for the service container, below we pass the login credentials for the db by passing them as env variable.
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: example
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run server
        run: npm start & npx wait-on http://127.0.0.1:$PORT # requires MongoDB Atlas to accept requests from anywhere!
      - name: Run tests
        run: npm test
      - name: Output information
        run: |
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        env:
          PORT: 3000
        run: |        
          echo "MONGODB_DB_NAME: $MONGODB_DB_NAME"
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
          echo "${{ env.PORT }}"
